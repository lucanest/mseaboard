{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"/Users/lucanest/Desktop/f.nosync/msaviz/frontend/node_modules/@babel/runtime/helpers/objectWithoutProperties.js\").default;\nvar _objectSpread = require(\"/Users/lucanest/Desktop/f.nosync/msaviz/frontend/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nconst _excluded = [\"breakpoint\", \"breakpoints\", \"cols\", \"layouts\", \"margin\", \"containerPadding\", \"onBreakpointChange\", \"onLayoutChange\", \"onWidthChange\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _fastEquals = require(\"fast-equals\");\nvar _utils = require(\"./utils\");\nvar _responsiveUtils = require(\"./responsiveUtils\");\nvar _ReactGridLayout = _interopRequireDefault(require(\"./ReactGridLayout\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n    t = new WeakMap();\n  return (_getRequireWildcardCache = function (e) {\n    return e ? t : r;\n  })(e);\n}\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n  var t = _getRequireWildcardCache(r);\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n      __proto__: null\n    },\n    a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n  return n.default = e, t && t.set(e, n), n;\n}\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n} /*:: import { type Layout, type Pick } from \"./utils\";*/ /*:: import { type ResponsiveLayout, type OnLayoutChangeCallback, type Breakpoints } from \"./responsiveUtils\";*/\n// $FlowFixMe[method-unbinding]\nconst type = obj => Object.prototype.toString.call(obj);\n\n/**\n * Get a value of margin or containerPadding.\n *\n * @param  {Array | Object} param Margin | containerPadding, e.g. [10, 10] | {lg: [10, 10], ...}.\n * @param  {String} breakpoint   Breakpoint: lg, md, sm, xs and etc.\n * @return {Array}\n */\nfunction getIndentationValue /*:: <T: ?[number, number]>*/(param /*: { [key: string]: T } | T*/, breakpoint /*: string*/) /*: T*/{\n  // $FlowIgnore TODO fix this typedef\n  if (param == null) return null;\n  // $FlowIgnore TODO fix this typedef\n  return Array.isArray(param) ? param : param[breakpoint];\n}\n/*:: type State = {\n  layout: Layout,\n  breakpoint: string,\n  cols: number,\n  layouts?: ResponsiveLayout<string>\n};*/\n/*:: type Props<Breakpoint: string = string> = {|\n  ...React.ElementConfig<typeof ReactGridLayout>,\n\n  // Responsive config\n  breakpoint?: ?Breakpoint,\n  breakpoints: Breakpoints<Breakpoint>,\n  cols: { [key: Breakpoint]: number },\n  layouts: ResponsiveLayout<Breakpoint>,\n  width: number,\n  margin: { [key: Breakpoint]: [number, number] } | [number, number],\n  /* prettier-ignore *-/\n  containerPadding: { [key: Breakpoint]: ?[number, number] } | ?[number, number],\n\n  // Callbacks\n  onBreakpointChange: (Breakpoint, cols: number) => void,\n  onLayoutChange: OnLayoutChangeCallback,\n  onWidthChange: (\n    containerWidth: number,\n    margin: [number, number],\n    cols: number,\n    containerPadding: ?[number, number]\n  ) => void\n|};*/\n/*:: type DefaultProps = Pick<\n  Props<>,\n  {|\n    allowOverlap: 0,\n    breakpoints: 0,\n    cols: 0,\n    containerPadding: 0,\n    layouts: 0,\n    margin: 0,\n    onBreakpointChange: 0,\n    onLayoutChange: 0,\n    onWidthChange: 0\n  |}\n>;*/\nclass ResponsiveReactGridLayout extends React.Component\n/*:: <\n  Props<>,\n  State\n>*/ {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", this.generateInitialState());\n    // wrap layouts so we do not need to pass layouts to child\n    _defineProperty(this, \"onLayoutChange\", (layout /*: Layout*/) => {\n      this.props.onLayoutChange(layout, _objectSpread(_objectSpread({}, this.props.layouts), {}, {\n        [this.state.breakpoint]: layout\n      }));\n    });\n  }\n  generateInitialState() /*: State*/{\n    const {\n      width,\n      breakpoints,\n      layouts,\n      cols\n    } = this.props;\n    const breakpoint = (0, _responsiveUtils.getBreakpointFromWidth)(breakpoints, width);\n    const colNo = (0, _responsiveUtils.getColsFromBreakpoint)(breakpoint, cols);\n    // verticalCompact compatibility, now deprecated\n    const compactType = this.props.verticalCompact === false ? null : this.props.compactType;\n    // Get the initial layout. This can tricky; we try to generate one however possible if one doesn't exist\n    // for this layout.\n    const initialLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(layouts, breakpoints, breakpoint, breakpoint, colNo, compactType);\n    return {\n      layout: initialLayout,\n      breakpoint: breakpoint,\n      cols: colNo\n    };\n  }\n  static getDerivedStateFromProps(nextProps /*: Props<*>*/, prevState /*: State*/) /*: ?$Shape<State>*/{\n    if (!(0, _fastEquals.deepEqual)(nextProps.layouts, prevState.layouts)) {\n      // Allow parent to set layouts directly.\n      const {\n        breakpoint,\n        cols\n      } = prevState;\n\n      // Since we're setting an entirely new layout object, we must generate a new responsive layout\n      // if one does not exist.\n      const newLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(nextProps.layouts, nextProps.breakpoints, breakpoint, breakpoint, cols, nextProps.compactType);\n      return {\n        layout: newLayout,\n        layouts: nextProps.layouts\n      };\n    }\n    return null;\n  }\n  componentDidUpdate(prevProps /*: Props<*>*/) {\n    // Allow parent to set width or breakpoint directly.\n    if (this.props.width != prevProps.width || this.props.breakpoint !== prevProps.breakpoint || !(0, _fastEquals.deepEqual)(this.props.breakpoints, prevProps.breakpoints) || !(0, _fastEquals.deepEqual)(this.props.cols, prevProps.cols)) {\n      this.onWidthChange(prevProps);\n    }\n  }\n  /**\n   * When the width changes work through breakpoints and reset state with the new width & breakpoint.\n   * Width changes are necessary to figure out the widget widths.\n   */\n  onWidthChange(prevProps /*: Props<*>*/) {\n    const {\n      breakpoints,\n      cols,\n      layouts,\n      compactType\n    } = this.props;\n    const newBreakpoint = this.props.breakpoint || (0, _responsiveUtils.getBreakpointFromWidth)(this.props.breakpoints, this.props.width);\n    const lastBreakpoint = this.state.breakpoint;\n    const newCols /*: number*/ = (0, _responsiveUtils.getColsFromBreakpoint)(newBreakpoint, cols);\n    const newLayouts = _objectSpread({}, layouts);\n\n    // Breakpoint change\n    if (lastBreakpoint !== newBreakpoint || prevProps.breakpoints !== breakpoints || prevProps.cols !== cols) {\n      // Preserve the current layout if the current breakpoint is not present in the next layouts.\n      if (!(lastBreakpoint in newLayouts)) newLayouts[lastBreakpoint] = (0, _utils.cloneLayout)(this.state.layout);\n\n      // Find or generate a new layout.\n      let layout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(newLayouts, breakpoints, newBreakpoint, lastBreakpoint, newCols, compactType);\n\n      // This adds missing items.\n      layout = (0, _utils.synchronizeLayoutWithChildren)(layout, this.props.children, newCols, compactType, this.props.allowOverlap);\n\n      // Store the new layout.\n      newLayouts[newBreakpoint] = layout;\n\n      // callbacks\n      this.props.onBreakpointChange(newBreakpoint, newCols);\n      this.props.onLayoutChange(layout, newLayouts);\n      this.setState({\n        breakpoint: newBreakpoint,\n        layout: layout,\n        cols: newCols\n      });\n    }\n    const margin = getIndentationValue(this.props.margin, newBreakpoint);\n    const containerPadding = getIndentationValue(this.props.containerPadding, newBreakpoint);\n\n    //call onWidthChange on every change of width, not only on breakpoint changes\n    this.props.onWidthChange(this.props.width, margin, newCols, containerPadding);\n  }\n  render() /*: React.Element<typeof ReactGridLayout>*/{\n    /* eslint-disable no-unused-vars */\n    const _this$props = this.props,\n      {\n        breakpoint,\n        breakpoints,\n        cols,\n        layouts,\n        margin,\n        containerPadding,\n        onBreakpointChange,\n        onLayoutChange,\n        onWidthChange\n      } = _this$props,\n      other = _objectWithoutProperties(_this$props, _excluded);\n    /* eslint-enable no-unused-vars */\n\n    return /*#__PURE__*/React.createElement(_ReactGridLayout.default, _extends({}, other, {\n      // $FlowIgnore should allow nullable here due to DefaultProps\n      margin: getIndentationValue(margin, this.state.breakpoint),\n      containerPadding: getIndentationValue(containerPadding, this.state.breakpoint),\n      onLayoutChange: this.onLayoutChange,\n      layout: this.state.layout,\n      cols: this.state.cols\n    }));\n  }\n}\nexports.default = ResponsiveReactGridLayout;\n// This should only include propTypes needed in this code; RGL itself\n// will do validation of the rest props passed to it.\n_defineProperty(ResponsiveReactGridLayout, \"propTypes\", {\n  //\n  // Basic props\n  //\n\n  // Optional, but if you are managing width yourself you may want to set the breakpoint\n  // yourself as well.\n  breakpoint: _propTypes.default.string,\n  // {name: pxVal}, e.g. {lg: 1200, md: 996, sm: 768, xs: 480}\n  breakpoints: _propTypes.default.object,\n  allowOverlap: _propTypes.default.bool,\n  // # of cols. This is a breakpoint -> cols map\n  cols: _propTypes.default.object,\n  // # of margin. This is a breakpoint -> margin map\n  // e.g. { lg: [5, 5], md: [10, 10], sm: [15, 15] }\n  // Margin between items [x, y] in px\n  // e.g. [10, 10]\n  margin: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.object]),\n  // # of containerPadding. This is a breakpoint -> containerPadding map\n  // e.g. { lg: [5, 5], md: [10, 10], sm: [15, 15] }\n  // Padding inside the container [x, y] in px\n  // e.g. [10, 10]\n  containerPadding: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.object]),\n  // layouts is an object mapping breakpoints to layouts.\n  // e.g. {lg: Layout, md: Layout, ...}\n  layouts(props /*: Props<>*/, propName /*: string*/) {\n    if (type(props[propName]) !== \"[object Object]\") {\n      throw new Error(\"Layout property must be an object. Received: \" + type(props[propName]));\n    }\n    Object.keys(props[propName]).forEach(key => {\n      if (!(key in props.breakpoints)) {\n        throw new Error(\"Each key in layouts must align with a key in breakpoints.\");\n      }\n      (0, _utils.validateLayout)(props.layouts[key], \"layouts.\" + key);\n    });\n  },\n  // The width of this component.\n  // Required in this propTypes stanza because generateInitialState() will fail without it.\n  width: _propTypes.default.number.isRequired,\n  //\n  // Callbacks\n  //\n\n  // Calls back with breakpoint and new # cols\n  onBreakpointChange: _propTypes.default.func,\n  // Callback so you can save the layout.\n  // Calls back with (currentLayout, allLayouts). allLayouts are keyed by breakpoint.\n  onLayoutChange: _propTypes.default.func,\n  // Calls back with (containerWidth, margin, cols, containerPadding)\n  onWidthChange: _propTypes.default.func\n});\n_defineProperty(ResponsiveReactGridLayout, \"defaultProps\", {\n  breakpoints: {\n    lg: 1200,\n    md: 996,\n    sm: 768,\n    xs: 480,\n    xxs: 0\n  },\n  cols: {\n    lg: 12,\n    md: 10,\n    sm: 6,\n    xs: 4,\n    xxs: 2\n  },\n  containerPadding: {\n    lg: null,\n    md: null,\n    sm: null,\n    xs: null,\n    xxs: null\n  },\n  layouts: {},\n  margin: [10, 10],\n  allowOverlap: false,\n  onBreakpointChange: _utils.noop,\n  onLayoutChange: _utils.noop,\n  onWidthChange: _utils.noop\n});","map":{"version":3,"names":["_objectWithoutProperties","require","default","_objectSpread","_excluded","Object","defineProperty","exports","value","React","_interopRequireWildcard","_propTypes","_interopRequireDefault","_fastEquals","_utils","_responsiveUtils","_ReactGridLayout","obj","__esModule","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_extends","assign","bind","target","arguments","length","source","key","apply","_defineProperty","_toPropertyKey","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","type","toString","getIndentationValue","param","breakpoint","Array","isArray","ResponsiveReactGridLayout","Component","constructor","generateInitialState","layout","props","onLayoutChange","layouts","state","width","breakpoints","cols","getBreakpointFromWidth","colNo","getColsFromBreakpoint","compactType","verticalCompact","initialLayout","findOrGenerateResponsiveLayout","getDerivedStateFromProps","nextProps","prevState","deepEqual","newLayout","componentDidUpdate","prevProps","onWidthChange","newBreakpoint","lastBreakpoint","newCols","newLayouts","cloneLayout","synchronizeLayoutWithChildren","children","allowOverlap","onBreakpointChange","setState","margin","containerPadding","render","_this$props","other","createElement","string","object","bool","oneOfType","array","propName","Error","keys","forEach","validateLayout","number","isRequired","func","lg","md","sm","xs","xxs","noop"],"sources":["/Users/lucanest/Desktop/f.nosync/msaviz/frontend/node_modules/react-grid-layout/build/ResponsiveReactGridLayout.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _fastEquals = require(\"fast-equals\");\nvar _utils = require(\"./utils\");\nvar _responsiveUtils = require(\"./responsiveUtils\");\nvar _ReactGridLayout = _interopRequireDefault(require(\"./ReactGridLayout\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); } /*:: import { type Layout, type Pick } from \"./utils\";*/ /*:: import { type ResponsiveLayout, type OnLayoutChangeCallback, type Breakpoints } from \"./responsiveUtils\";*/\n// $FlowFixMe[method-unbinding]\nconst type = obj => Object.prototype.toString.call(obj);\n\n/**\n * Get a value of margin or containerPadding.\n *\n * @param  {Array | Object} param Margin | containerPadding, e.g. [10, 10] | {lg: [10, 10], ...}.\n * @param  {String} breakpoint   Breakpoint: lg, md, sm, xs and etc.\n * @return {Array}\n */\nfunction getIndentationValue /*:: <T: ?[number, number]>*/(param /*: { [key: string]: T } | T*/, breakpoint /*: string*/) /*: T*/{\n  // $FlowIgnore TODO fix this typedef\n  if (param == null) return null;\n  // $FlowIgnore TODO fix this typedef\n  return Array.isArray(param) ? param : param[breakpoint];\n}\n/*:: type State = {\n  layout: Layout,\n  breakpoint: string,\n  cols: number,\n  layouts?: ResponsiveLayout<string>\n};*/\n/*:: type Props<Breakpoint: string = string> = {|\n  ...React.ElementConfig<typeof ReactGridLayout>,\n\n  // Responsive config\n  breakpoint?: ?Breakpoint,\n  breakpoints: Breakpoints<Breakpoint>,\n  cols: { [key: Breakpoint]: number },\n  layouts: ResponsiveLayout<Breakpoint>,\n  width: number,\n  margin: { [key: Breakpoint]: [number, number] } | [number, number],\n  /* prettier-ignore *-/\n  containerPadding: { [key: Breakpoint]: ?[number, number] } | ?[number, number],\n\n  // Callbacks\n  onBreakpointChange: (Breakpoint, cols: number) => void,\n  onLayoutChange: OnLayoutChangeCallback,\n  onWidthChange: (\n    containerWidth: number,\n    margin: [number, number],\n    cols: number,\n    containerPadding: ?[number, number]\n  ) => void\n|};*/\n/*:: type DefaultProps = Pick<\n  Props<>,\n  {|\n    allowOverlap: 0,\n    breakpoints: 0,\n    cols: 0,\n    containerPadding: 0,\n    layouts: 0,\n    margin: 0,\n    onBreakpointChange: 0,\n    onLayoutChange: 0,\n    onWidthChange: 0\n  |}\n>;*/\nclass ResponsiveReactGridLayout extends React.Component\n/*:: <\n  Props<>,\n  State\n>*/\n{\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", this.generateInitialState());\n    // wrap layouts so we do not need to pass layouts to child\n    _defineProperty(this, \"onLayoutChange\", (layout /*: Layout*/) => {\n      this.props.onLayoutChange(layout, {\n        ...this.props.layouts,\n        [this.state.breakpoint]: layout\n      });\n    });\n  }\n  generateInitialState() /*: State*/{\n    const {\n      width,\n      breakpoints,\n      layouts,\n      cols\n    } = this.props;\n    const breakpoint = (0, _responsiveUtils.getBreakpointFromWidth)(breakpoints, width);\n    const colNo = (0, _responsiveUtils.getColsFromBreakpoint)(breakpoint, cols);\n    // verticalCompact compatibility, now deprecated\n    const compactType = this.props.verticalCompact === false ? null : this.props.compactType;\n    // Get the initial layout. This can tricky; we try to generate one however possible if one doesn't exist\n    // for this layout.\n    const initialLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(layouts, breakpoints, breakpoint, breakpoint, colNo, compactType);\n    return {\n      layout: initialLayout,\n      breakpoint: breakpoint,\n      cols: colNo\n    };\n  }\n  static getDerivedStateFromProps(nextProps /*: Props<*>*/, prevState /*: State*/) /*: ?$Shape<State>*/{\n    if (!(0, _fastEquals.deepEqual)(nextProps.layouts, prevState.layouts)) {\n      // Allow parent to set layouts directly.\n      const {\n        breakpoint,\n        cols\n      } = prevState;\n\n      // Since we're setting an entirely new layout object, we must generate a new responsive layout\n      // if one does not exist.\n      const newLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(nextProps.layouts, nextProps.breakpoints, breakpoint, breakpoint, cols, nextProps.compactType);\n      return {\n        layout: newLayout,\n        layouts: nextProps.layouts\n      };\n    }\n    return null;\n  }\n  componentDidUpdate(prevProps /*: Props<*>*/) {\n    // Allow parent to set width or breakpoint directly.\n    if (this.props.width != prevProps.width || this.props.breakpoint !== prevProps.breakpoint || !(0, _fastEquals.deepEqual)(this.props.breakpoints, prevProps.breakpoints) || !(0, _fastEquals.deepEqual)(this.props.cols, prevProps.cols)) {\n      this.onWidthChange(prevProps);\n    }\n  }\n  /**\n   * When the width changes work through breakpoints and reset state with the new width & breakpoint.\n   * Width changes are necessary to figure out the widget widths.\n   */\n  onWidthChange(prevProps /*: Props<*>*/) {\n    const {\n      breakpoints,\n      cols,\n      layouts,\n      compactType\n    } = this.props;\n    const newBreakpoint = this.props.breakpoint || (0, _responsiveUtils.getBreakpointFromWidth)(this.props.breakpoints, this.props.width);\n    const lastBreakpoint = this.state.breakpoint;\n    const newCols /*: number*/ = (0, _responsiveUtils.getColsFromBreakpoint)(newBreakpoint, cols);\n    const newLayouts = {\n      ...layouts\n    };\n\n    // Breakpoint change\n    if (lastBreakpoint !== newBreakpoint || prevProps.breakpoints !== breakpoints || prevProps.cols !== cols) {\n      // Preserve the current layout if the current breakpoint is not present in the next layouts.\n      if (!(lastBreakpoint in newLayouts)) newLayouts[lastBreakpoint] = (0, _utils.cloneLayout)(this.state.layout);\n\n      // Find or generate a new layout.\n      let layout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(newLayouts, breakpoints, newBreakpoint, lastBreakpoint, newCols, compactType);\n\n      // This adds missing items.\n      layout = (0, _utils.synchronizeLayoutWithChildren)(layout, this.props.children, newCols, compactType, this.props.allowOverlap);\n\n      // Store the new layout.\n      newLayouts[newBreakpoint] = layout;\n\n      // callbacks\n      this.props.onBreakpointChange(newBreakpoint, newCols);\n      this.props.onLayoutChange(layout, newLayouts);\n      this.setState({\n        breakpoint: newBreakpoint,\n        layout: layout,\n        cols: newCols\n      });\n    }\n    const margin = getIndentationValue(this.props.margin, newBreakpoint);\n    const containerPadding = getIndentationValue(this.props.containerPadding, newBreakpoint);\n\n    //call onWidthChange on every change of width, not only on breakpoint changes\n    this.props.onWidthChange(this.props.width, margin, newCols, containerPadding);\n  }\n  render() /*: React.Element<typeof ReactGridLayout>*/{\n    /* eslint-disable no-unused-vars */\n    const {\n      breakpoint,\n      breakpoints,\n      cols,\n      layouts,\n      margin,\n      containerPadding,\n      onBreakpointChange,\n      onLayoutChange,\n      onWidthChange,\n      ...other\n    } = this.props;\n    /* eslint-enable no-unused-vars */\n\n    return /*#__PURE__*/React.createElement(_ReactGridLayout.default, _extends({}, other, {\n      // $FlowIgnore should allow nullable here due to DefaultProps\n      margin: getIndentationValue(margin, this.state.breakpoint),\n      containerPadding: getIndentationValue(containerPadding, this.state.breakpoint),\n      onLayoutChange: this.onLayoutChange,\n      layout: this.state.layout,\n      cols: this.state.cols\n    }));\n  }\n}\nexports.default = ResponsiveReactGridLayout;\n// This should only include propTypes needed in this code; RGL itself\n// will do validation of the rest props passed to it.\n_defineProperty(ResponsiveReactGridLayout, \"propTypes\", {\n  //\n  // Basic props\n  //\n\n  // Optional, but if you are managing width yourself you may want to set the breakpoint\n  // yourself as well.\n  breakpoint: _propTypes.default.string,\n  // {name: pxVal}, e.g. {lg: 1200, md: 996, sm: 768, xs: 480}\n  breakpoints: _propTypes.default.object,\n  allowOverlap: _propTypes.default.bool,\n  // # of cols. This is a breakpoint -> cols map\n  cols: _propTypes.default.object,\n  // # of margin. This is a breakpoint -> margin map\n  // e.g. { lg: [5, 5], md: [10, 10], sm: [15, 15] }\n  // Margin between items [x, y] in px\n  // e.g. [10, 10]\n  margin: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.object]),\n  // # of containerPadding. This is a breakpoint -> containerPadding map\n  // e.g. { lg: [5, 5], md: [10, 10], sm: [15, 15] }\n  // Padding inside the container [x, y] in px\n  // e.g. [10, 10]\n  containerPadding: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.object]),\n  // layouts is an object mapping breakpoints to layouts.\n  // e.g. {lg: Layout, md: Layout, ...}\n  layouts(props /*: Props<>*/, propName /*: string*/) {\n    if (type(props[propName]) !== \"[object Object]\") {\n      throw new Error(\"Layout property must be an object. Received: \" + type(props[propName]));\n    }\n    Object.keys(props[propName]).forEach(key => {\n      if (!(key in props.breakpoints)) {\n        throw new Error(\"Each key in layouts must align with a key in breakpoints.\");\n      }\n      (0, _utils.validateLayout)(props.layouts[key], \"layouts.\" + key);\n    });\n  },\n  // The width of this component.\n  // Required in this propTypes stanza because generateInitialState() will fail without it.\n  width: _propTypes.default.number.isRequired,\n  //\n  // Callbacks\n  //\n\n  // Calls back with breakpoint and new # cols\n  onBreakpointChange: _propTypes.default.func,\n  // Callback so you can save the layout.\n  // Calls back with (currentLayout, allLayouts). allLayouts are keyed by breakpoint.\n  onLayoutChange: _propTypes.default.func,\n  // Calls back with (containerWidth, margin, cols, containerPadding)\n  onWidthChange: _propTypes.default.func\n});\n_defineProperty(ResponsiveReactGridLayout, \"defaultProps\", {\n  breakpoints: {\n    lg: 1200,\n    md: 996,\n    sm: 768,\n    xs: 480,\n    xxs: 0\n  },\n  cols: {\n    lg: 12,\n    md: 10,\n    sm: 6,\n    xs: 4,\n    xxs: 2\n  },\n  containerPadding: {\n    lg: null,\n    md: null,\n    sm: null,\n    xs: null,\n    xxs: null\n  },\n  layouts: {},\n  margin: [10, 10],\n  allowOverlap: false,\n  onBreakpointChange: _utils.noop,\n  onLayoutChange: _utils.noop,\n  onWidthChange: _utils.noop\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}