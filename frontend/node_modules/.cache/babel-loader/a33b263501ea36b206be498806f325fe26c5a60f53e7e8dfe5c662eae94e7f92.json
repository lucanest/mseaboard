{"ast":null,"code":"import { cast } from './cast';\nimport { dfs } from './dfs';\n/**\n * Normalize branch lengths of a Newick tree so total length sums to 1\n * @param s - Newick string or tree object\n * @returns Normalized tree object\n */\nexport function normalize(s) {\n  const tree = cast(s);\n  function _local_normalize(tree) {\n    const vertex = dfs(tree);\n    const total = Object.values(vertex).reduce((acc, len) => acc + len, 0);\n    // Defensive: avoid division by zero\n    if (total === 0) return tree;\n    // Here dfs takes two params: tree and optional nodeCallback\n    dfs(tree, e => {\n      if (typeof e.length === 'number') {\n        e.length = e.length / total;\n      }\n      return e;\n    });\n    return tree;\n  }\n  return _local_normalize(tree);\n}","map":{"version":3,"names":["cast","dfs","normalize","s","tree","_local_normalize","vertex","total","Object","values","reduce","acc","len","e","length"],"sources":["/Users/lucanest/Desktop/f.nosync/msaviz/frontend/node_modules/newick/dist/esm/tools/normalize.js"],"sourcesContent":["import { cast } from './cast';\nimport { dfs } from './dfs';\n/**\n * Normalize branch lengths of a Newick tree so total length sums to 1\n * @param s - Newick string or tree object\n * @returns Normalized tree object\n */\nexport function normalize(s) {\n    const tree = cast(s);\n    function _local_normalize(tree) {\n        const vertex = dfs(tree);\n        const total = Object.values(vertex).reduce((acc, len) => acc + len, 0);\n        // Defensive: avoid division by zero\n        if (total === 0)\n            return tree;\n        // Here dfs takes two params: tree and optional nodeCallback\n        dfs(tree, (e) => {\n            if (typeof e.length === 'number') {\n                e.length = e.length / total;\n            }\n            return e;\n        });\n        return tree;\n    }\n    return _local_normalize(tree);\n}\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,QAAQ;AAC7B,SAASC,GAAG,QAAQ,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAACC,CAAC,EAAE;EACzB,MAAMC,IAAI,GAAGJ,IAAI,CAACG,CAAC,CAAC;EACpB,SAASE,gBAAgBA,CAACD,IAAI,EAAE;IAC5B,MAAME,MAAM,GAAGL,GAAG,CAACG,IAAI,CAAC;IACxB,MAAMG,KAAK,GAAGC,MAAM,CAACC,MAAM,CAACH,MAAM,CAAC,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,GAAGC,GAAG,EAAE,CAAC,CAAC;IACtE;IACA,IAAIL,KAAK,KAAK,CAAC,EACX,OAAOH,IAAI;IACf;IACAH,GAAG,CAACG,IAAI,EAAGS,CAAC,IAAK;MACb,IAAI,OAAOA,CAAC,CAACC,MAAM,KAAK,QAAQ,EAAE;QAC9BD,CAAC,CAACC,MAAM,GAAGD,CAAC,CAACC,MAAM,GAAGP,KAAK;MAC/B;MACA,OAAOM,CAAC;IACZ,CAAC,CAAC;IACF,OAAOT,IAAI;EACf;EACA,OAAOC,gBAAgB,CAACD,IAAI,CAAC;AACjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}